module.exports = '#ifdef GL_ES\nprecision mediump float;\n#endif\n\nvarying vec2 vUv;\nuniform sampler2D tGrid;\nuniform sampler2D tDigits;\nuniform vec2 scale; \nuniform vec2 points; \nuniform vec2 circlePosArray[10];\nvarying vec3 vWorldPosition;\nuniform vec2 resolution;\n\nfloat pixel = 1.0 / resolution.y;\n\nvoid main(void) \n{\n    vec3 lineColor = vec3(0.89453125,0.89453125,0.7734375);\n\n    vec2 position = vWorldPosition.xz/resolution.y+.5;//vUv;\n    float color = texture2D( tGrid, vUv*scale ).x*.5;\n\n    float color2 = smoothstep( vUv.y,vUv.y+0.007,0.508);\n    color2 -= smoothstep(vUv.y,vUv.y+0.007,0.498);\n\n    if( vUv.y < 0.5 ) {\n        float y = 0.4 - (vUv.y*0.9);\n\n        float rows = floor(points.x/4.0);\n        float offset = points.x-rows*4.0;\n\n        color2 += texture2D(tDigits,vec2(vUv.x/4.0 + offset*0.25,  1.0-y/2.0 - rows*0.19 )).x;\n    }\n    else {\n        float invY = (0.5-(1.0-(vUv.y*0.90)));\n\n        float rows = floor(points.y/4.0);\n        float offset = points.y-rows*4.0;\n\n        color2 = texture2D(tDigits,vec2((1.0-vUv.x)/4.0 + offset*0.25,   1.0-invY/2.0 - rows*0.19  )).x;\n    }\n\n    vec3 gridColor = vec3(color, color, color);\n\n    vec3 centerColor = vec3(color2)*lineColor;\n    \n\n    gl_FragColor = vec4( (gridColor)*lineColor , step(gridColor.x,0.99) )*0.2 + vec4( centerColor , color2);\n \n}\n\n';