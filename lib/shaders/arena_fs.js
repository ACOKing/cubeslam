module.exports = '#ifdef GL_ES\nprecision mediump float;\n#endif\n\nvarying vec2 vUv;\nuniform sampler2D tGrid;\nuniform sampler2D tDigits;\nuniform vec2 scale; \nuniform vec2 points; \nuniform vec2 circlePosArray[10];\nvarying vec3 vWorldPosition;\nuniform vec2 resolution;\n\nfloat pixel = 1.0 / resolution.y;\n\nvoid main(void) \n{\n    vec3 lineColor = vec3(0.89453125,0.89453125,0.7734375);\n\n    vec2 position = vWorldPosition.xz/resolution.y+.5;//vUv;\n    float color = texture2D( tGrid, vUv*scale ).x*0.5;\n\n    float color2 = smoothstep( vUv.y,vUv.y+0.007,0.508);\n    color2 -= smoothstep(vUv.y,vUv.y+0.007,0.498);\n\n    if( vUv.y < 0.5 ) {\n        //color2 += texture2D(tDigits,vec2(vUv.x/7.1 + 1.0/7.1*points.x,1.0-(0.5-vUv.y)/4.9)).x;\n        color2 += texture2D(tDigits,vec2(vUv.x/3.55 - 1.0/3.55 + 1.0/3.55*points.x,1.0-(0.5-vUv.y)/2.45)).x;\n    }\n    else {\n        //color2 += texture2D(tDigits,vec2((1.0-vUv.x)/7.1 + 1.0/7.1*points.y,1.0-(0.5-(1.0-vUv.y))/4.9)).x;\n        color2 += texture2D(tDigits,vec2((1.0-vUv.x)/3.55 - 1.0/3.55 + 1.0/3.55*points.y,1.0-(0.5-(1.0-vUv.y))/2.45)).x;\n    }\n\n    vec3 gridColor = vec3(color, color, color);\n\n    vec3 centerColor = vec3(color2)*lineColor;\n    \n\n    gl_FragColor = vec4( (gridColor)*lineColor , step(gridColor.x,0.99) )*0.2 + vec4( centerColor , color2);\n}\n\n';