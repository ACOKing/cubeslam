module.exports = '#ifdef GL_ES\nprecision mediump float;\n#endif\n\nvarying vec2 vUv;\nuniform sampler2D tGrid;\nuniform vec2 scale; \n\n/*\nfloat pixel = 1.0 / resolution.y;\nfloat circle(vec2 uv, vec2 pos, float d){\n    // Modified to add anti-aliasing.\n    return 1.0 - smoothstep(d, d + pixel * 1.5, length(uv - pos));\n}*/\n\nfloat thing(vec2 pos) \n{\n    float a = clamp(sin(pos.y / 70.) + sqrt(15.+tan(pos.x)), 0.0, 22.);\n    float b = clamp(cos(pos.x / 70.) + sqrt(25.+tan(pos.y)), 0.3, 10.);\n    return (a + b);\n}\n\nvoid main(void) \n{\n    vec2 position = vUv;\n    position += 0.25;\n    vec2 world = position*scale*3.1417;\n    float color = 1./thing(world);\n\n    /*dist += step( mod(position.x+0.241, 1./scale.x),0.002)*.3;\n    color += step( mod(position.x+0.24, 1./scale.x),0.002)*.1;\n    color += step( mod(position.x+0.239, 1./scale.x),0.002)*.1;*/\n\n    color = texture2D( tGrid, vUv*scale ).x;\n\n    float color2 = step( vUv.y,0.505);\n    color2 -= step(vUv.y,0.495);\n\n    /*float layer1 = circle(uv, pos1, 0.1) - circle(uv, pos1, 0.09) + circle(uv, pos2, 0.1) - circle(uv, pos2, 0.09);*/\n\n    vec3 gridColor = vec3(color, color, color);\n    vec3 centerColor = vec3(color2);\n    vec3 lineColor = vec3(0.89453125,0.89453125,0.7734375);\n    gl_FragColor = vec4( (gridColor + centerColor)*lineColor , (.1+color2) );\n    \n}\n\n';